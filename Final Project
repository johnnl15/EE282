#!/bin/bash

#SBATCH --job-name=test      ## Name of the job.
#SBATCH -A ee282     ## account to charge 
#SBATCH -p standard          ## partition/queue name
#SBATCH --nodes=1            ## (-N) number of nodes to use
#SBATCH --ntasks=1           ## (-n) number of tasks to launch
#SBATCH --cpus-per-task=1    ## number of cores the job needs
#SBATCH --error=slurm-%J.err ## error log file

# Run command hostname and save output to the file out.txt
srun hostname > out.txt


I wanted to analyze the quality of the sequencing of my laboratory's data set. So first, I retrieved from the online database. 
Retrieved file of wound one from my lab's deposit into ebi. And converted the sam file into 
```
http://www.ebi.ac.uk/ena/data/view/SRR10751968
mkdir finalproj/wound1bam
wget "ftp://ftp.sra.ebi.ac.uk/vol1/run/SRR107/SRR10751968/Wounded_1_scRNA_Seq.bam" Wounded_1_scRNA_Seq.bam
wget "ftp://ftp.sra.ebi.ac.uk/vol1/run/SRR107/SRR10751966/Un_Wounded_1_scRNA_Seq.bam" Un_Wounded_1_scRNA_Seq.bam
wget "ftp://ftp.sra.ebi.ac.uk/vol1/run/SRR107/SRR10751969/Wounded_2_scRNA_Seq.bam" Wounded_2_scRNA_Seq.bam
wget "ftp://ftp.sra.ebi.ac.uk/vol1/run/SRR107/SRR10751967/Un_Wounded_2_scRNA_Seq.bam" Un_Wounded_2_scRNA_Seq.bam

samtools view Un_Wounded_1_scRNA_Seq.bam | awk -F "\t" '{print $5}' \
|sort \
|uniq -c \
|sort -nr \
> Un_Wounded_1_scRNA_Seq.MapQ.txt

```
Instead I can print out mapq and analyze it in R to see the read quality. 
I don't think I need to do the below. 
samtools view Wounded_1_scRNA_Seq.bam | \
bioawk -c sam '{s=$seq; if(and($flag, 16)) {s=revcomp($seq)} print ">"$qname"\n"s}' Wounded_1_scRNA_Seq.bam -> Wounded_1_scRNA_Seq.fa
ln -sf Wounded_1_scRNA_Seq.fastq reads.fq  



```
Then I conducted my own alignment of the the files in bwa mem. After which I compared it with the established mus musculus on busco. 

```
minimap -t 32 -Sw5 -L100 -m0 reads.fq{,} \
| gzip -1 \
> onp.paf.gz

miniasm -f reads.fq onp.paf.gz \
> reads.gfa

awk '/^S/{print ">"$2"\n"$3}' reads.gfa | fold > out.fa



Makedirectory and get matrix, barcode, and genes files. Unzip them and rename them to barcodes.tsv, genes.tsv, and matrix.mtx. Then un seurat-read-10x.R

```
mkdir finalproj/wound1

wget "ftp://ftp.ncbi.nlm.nih.gov/geo/samples/GSM4230nnn/GSM4230078/suppl/GSM4230078_Wounded_1_scRNA-Seq.mtx.gz" -O GSM4230078_Wounded_1_scRNA-Seq.mtx.gz
gunzip GSM4230078_Wounded_1_scRNA-Seq.mtx.gz 
wget "ftp://ftp.ncbi.nlm.nih.gov/geo/samples/GSM4230nnn/GSM4230078/suppl/GSM4230078_barcodes_Wounded_1_scRNA-Seq.tsv.gz" -O \
  GSM4230078_barcodes_Wounded_1_scRNA-Seq.tsv.gz
wget "ftp://ftp.ncbi.nlm.nih.gov/geo/samples/GSM4230nnn/GSM4230078/suppl/GSM4230078_genes_Wounded_1_scRNA-Seq.tsv.gz" -O GSM4230078_genes_Wounded_1_scRNA-Seq.tsv.gz \

gunzip GSM4230078_genes_Wounded_1_scRNA-Seq.tsv.gz
gunzip GSM4230078_barcodes_Wounded_1_scRNA-Seq.tsv.gz

mv GSM4230078_barcodes_Wounded_1_scRNA-Seq.tsv barcodes.tsv
mv GSM4230078_genes_Wounded_1_scRNA-Seq.tsv genes.tsv
mv GSM4230078_Wounded_1_scRNA-Seq.mtx matrix.mtx


gunzip GSM4230076_genes_Un-Wounded_1_scRNA-Seq.tsv
gunzip GSM4230076_barcodes_Un-Wounded_1_scRNA-Seq.tsv

mv GSM4230076_barcodes_Un-Wounded_1_scRNA-Seq.tsv barcodes.tsv
mv GSM4230076_genes_Un-Wounded_1_scRNA-Seq.tsv genes.tsv
mv GSM4230076_Un-Wounded_1_scRNA-Seq.mtx matrix.mtx

ftp://ftp.ncbi.nlm.nih.gov/geo/samples/GSM4230nnn/GSM4230076/suppl/GSM4230076%5FUn%2DWounded%5F1%5FscRNA%2DSeq%2Emtx%2Egz
https://www.ncbi.nlm.nih.gov/geo/download/?acc=GSM4230076&format=file&file=GSM4230076%5FUn%2DWounded%5F1%5FscRNA%2DSeq%2Emtx%2Egz


seurat-read-10x.R -d ~/finalproj/wound1 -o Wound1.SCSeq
```

Output

```
27998 x 7578 sparse Matrix of class "dgCMatrix"
                                                                              
Xkr4    . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ......
Gm1992  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ......
Gm37381 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ......
Rp1     . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ......
Rp1.1   . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ......
Sox17   . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ......
Gm37323 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ......
Mrpl15  . . . 1 1 . . 1 1 1 . 1 3 2 . 1 . 1 . . 1 . . 2 . . . . . 2 3 . ......

 ..............................
 ........suppressing 7546 columns and 27983 rows in show(); maybe adjust 'options(max.print= *, width = *)'
 ..............................
                                                                                     
AC234645.1     . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ......
AC168977.2     . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ......
AC168977.1     . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ......
PISD           . . . . . . . . 1 1 . . . . . . . 2 . . . 1 1 1 . . . . . . . . ......
DHRSX          . 1 . . 1 . . . . . 1 . . . . 1 2 . . 1 2 . . . . . . . . . . . ......
Vmn2r122       . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ......
CAAA01147332.1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ......
# Object summary
An object of class Seurat 
27998 features across 7578 samples within 1 assay 
Active assay: RNA (27998 features)

# Metadata sample
                    orig.ident nCount_RNA nFeature_RNA
AAACCTGAGACAAGCC SeuratProject       4398         1652
AAACCTGAGAGAGCTC SeuratProject      13299         3175
AAACCTGAGTCAAGCG SeuratProject       6387         1946
AAACCTGAGTCCTCCT SeuratProject       7917         2014
AAACCTGAGTCGTACT SeuratProject      20745         4235
AAACCTGAGTTGTAGA SeuratProject       5962         1636
```
Then filter cells but unsure what i'm filtering out. Doublets? How to do that? 

```
seurat-filter-cells.R -i Wound1.SCSeq -s nFeature_RNA,nCount_RNA  -o filtered_wound1
7578 cells remaining after applying nFeature_RNA thresholds -Inf < x < Inf 
7578 cells remaining after applying nCount_RNA thresholds -Inf < x < Inf 
# Before filtering:
An object of class Seurat 
27998 features across 7578 samples within 1 assay 
Active assay: RNA (27998 features)

# After filtering:
An object of class Seurat 
27998 features across 7578 samples within 1 assay 
Active assay: RNA (27998 features)

# Parameter values:

                                  value
input_format                     seurat
output_format                    seurat
subset_names    nFeature_RNA,nCount_RNA
low_thresholds                     <NA>
high_thresholds                    <NA>
```
Then normalize by default settings. 

```
seurat-normalise-data.R -i filtered_wound1 -s 10000 -o norm_wound1
```
```
seurat-find-variable-genes.R -i norm_wound1 -o variablegenes_wound1 -t variables_geneswound1
2000 variable genes detected out of total 27998

Parameter values:
                          value
input_format             seurat
output_format            seurat
selection_method            vst
mean_function           ExpMean
dispersion_function      LogVMR
x_low_cutoff                0.1
x_high_cutoff                 8
nfeatures                  2000
y_low_cutoff                  1
y_high_cutoff               Inf
loess_span                  0.3
clip_max                   auto
num_bin                      20
binning_method      equal_width
```

Then run scale and PCA and transfer anchors. 

```
seurat-scale-data.R -i variablegenes_wound1 -o scale_wound1
seurat-run-pca.R -i scale_wound1 -o pca_wound1 -b pca_wound1_embed -l pca_wound1_load -s pca_std_wound1
seurat-find-transfer-anchors.R -i pca_wound1 -r pca_wound1 -o anchor_wound1 --normalization-method LogNormalize -d 1:10    

Performing PCA on the provided reference using 2000 features as input.
Projecting PCA
Finding neighborhoods
Finding anchors
	Found 23128 anchors
Filtering anchors
	Retained 17275 anchors
Extracting within-dataset neighbors
```
Find neighbors and run clusters. 
```
seurat-find-neighbours.R -i pca_wound1 -o neighbours_wound1 --dims 1,2,3,4,5 --compute-snn --reduction pca
seurat-find-clusters.R -i neighbours_wound1 -a 1 -m ~/finalproj/wound1/temp -o cluster_wound1 -t cluster_wound1_text 

Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck

Number of nodes: 7578
Number of edges: 72110

Running Louvain algorithm...
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Maximum modularity in 10 random starts: 0.8776
Number of communities: 19
Elapsed time: 0 seconds
7578 cells fall into  19 final clusters. Membership numbers:

          No. cells
0              1113
1               956
10              270
11              269
12              233
13              224
14              158
15              128
16               67
17               61
2               816
3               544
4               535
5               491
6               489
7               468
8               460
9               295
singleton         1

Parameter values:

                  value
input_format     seurat
output_format    seurat
resolution          0.8
algorithm             1
modularity_fxn        1
method           matrix
graph_name       RNA_nn
nrandom_starts       10
n_iterations         10
group_singletons  FALSE
random_seed           0

```
seurat-run-tsne.R -i pca_wound1 -r pca -d 2 -o tsne_wound1 -b tsne_embeddings_file

seurat-find-markers.R -i cluster_wound1 -e NULL -t wilcox -o marker_text_wound1 

```
Warning: The following tests were not performed: 
Warning: When testing singleton versus all:
	Cell group 1 has fewer than 3 cells
Summary of markers found:

          No. cells No. markers
0              1113        1557
1               956        1164
10              270         900
11              269        1143
12              233        1209
13              224        1918
14              158        1160
15              128        2277
16               67         164
17               61        1064
2               816        1021
3               544        1301
4               535        1159
5               491         984
6               489        1269
7               468        1720
8               460        1067
9               295        1134
singleton         1           0

Parameter values:
                     value
genes_use             NULL
input_format        seurat
logfc_threshold       0.25
min_pct                0.1
min_diff_pct          -Inf
only_pos             FALSE
test_use            wilcox
max_cells_per_ident    Inf
min_cells_gene           3
min_cells_group          3
```
Then exported to cellbrowser. 

```
seurat-export-cellbrowser.R -i tsne_wound1 -o html_output_wound1 -n wound1.browser
Writing expression matrix to html_output_wound1/exprMatrix.tsv.gz
Writing embeddings to html_output_wound1/tsne.coords.tsv
Writing meta data to html_output_wound1/meta.tsv
Prepared cellbrowser directory html_output_wound1
```

seurat-dim-plot.R -i cluster_wound1 -r pca -d do-label -t 'Wound1' -m do-bare -o pca_image_file_wound1
